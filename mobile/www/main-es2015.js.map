{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/admin.guard.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth-module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/auth/createModerator/createModerator.component.ts","./src/app/auth/createModerator/createModerator.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/modifyPassword/modifyPassword.component.ts","./src/app/auth/modifyPassword/modifyPassword.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/auth/userList/user-list.component.ts","./src/app/auth/userList/user-list.component.html","./src/app/error-interceptor.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/helpers/filter.pipe.ts","./src/app/helpers/json-filter-by.pipe.ts","./src/app/posts/post-create/post-bid/post-bid.component.ts","./src/app/posts/post-create/post-bid/post-bid.component.html","./src/app/posts/post-create/post-buy/post-buy.component.ts","./src/app/posts/post-create/post-buy/post-buy.component.html","./src/app/posts/post-create/post-create/mime-type.validator.ts","./src/app/posts/post-create/post-create/post-create.component.ts","./src/app/posts/post-create/post-create/post-create.component.html","./src/app/posts/post-create/post-list-bought/post-list-bought.component.ts","./src/app/posts/post-create/post-list-bought/post-list-bought.component.html","./src/app/posts/post-create/post-list-buying/post-list-buying.component.ts","./src/app/posts/post-create/post-list-buying/post-list-buying.component.html","./src/app/posts/post-create/post-list-expired/post-list-expired.component.ts","./src/app/posts/post-create/post-list-expired/post-list-expired.component.html","./src/app/posts/post-create/post-list-selling/post-list-selling.component.ts","./src/app/posts/post-create/post-list-selling/post-list-selling.component.html","./src/app/posts/post-create/post-list-sold/post-list-sold.component.ts","./src/app/posts/post-create/post-list-sold/post-list-sold.component.html","./src/app/posts/post-create/post-list-won/post-list-won.component.ts","./src/app/posts/post-create/post-list-won/post-list-won.component.html","./src/app/posts/post-create/post-list/post-list.component.ts","./src/app/posts/post-create/post-list/post-list.component.html","./src/app/posts/post-create/post-messages/post-messages.component.ts","./src/app/posts/post-create/post-messages/post-messages.component.html","./src/app/posts/post-create/post.module.ts","./src/app/posts/post-create/post.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion'\nimport { MatPaginatorModule } from '@angular/material/paginator'\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSidenavModule } from '@angular/material/sidenav'\n\n@NgModule({\nexports: [\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatDialogModule,\n  MatDatepickerModule,\n  MatCheckboxModule,\n  MatDividerModule,\n  MatSidenavModule\n]\n})\n\nexport class AngularMaterialModule {}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostListComponent } from './posts/post-create/post-list/post-list.component';\nimport { PostListSellingComponent } from './posts/post-create/post-list-selling/post-list-selling.component';\nimport { PostListBuyingComponent } from './posts/post-create/post-list-buying/post-list-buying.component';\nimport { PostListExpiredComponent } from './posts/post-create/post-list-expired/post-list-expired.component';\nimport { PostCreateComponent } from './posts/post-create/post-create/post-create.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { PostMessagesComponent } from './posts/post-create/post-messages/post-messages.component';\nimport { PostBidComponent } from './posts/post-create/post-bid/post-bid.component';\nimport { CreateModeratorComponent } from './auth/createModerator/createModerator.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AdminGuard } from './auth/admin.guard';\nimport { ModifyPasswordComponent } from './auth/modifyPassword/modifyPassword.component';\nimport { PostListWonComponent } from './posts/post-create/post-list-won/post-list-won.component';\nimport { PostBuyComponent } from './posts/post-create/post-buy/post-buy.component';\nimport { PostListBoughtComponent } from './posts/post-create/post-list-bought/post-list-bought.component';\nimport { PostListSoldComponent } from './posts/post-create/post-list-sold/post-list-sold.component'\nimport { UserListComponent} from './auth/userList/user-list.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: '', redirectTo: 'postList', pathMatch: 'full'\n  },\n  {\n    path: 'postList', component: PostListComponent\n  },\n  {\n    path: 'userList', component: UserListComponent, canActivate: [AdminGuard]\n  },\n  {\n    path: 'postListSelling', component: PostListSellingComponent, canActivate: [AuthGuard]\n  },\n  {\n    path: 'postListBuying', component: PostListBuyingComponent, canActivate: [AuthGuard]\n  },\n  {\n    path: 'postListWon', component: PostListWonComponent, canActivate: [AuthGuard]\n  },\n  {\n    path: 'createPost', component: PostCreateComponent, canActivate: [AuthGuard]\n  },\n  {\n    path: 'postListExpired', component: PostListExpiredComponent, canActivate: [AdminGuard]\n  },\n  {\n    path: 'postListSold', component: PostListSoldComponent, canActivate: [AdminGuard]\n  },\n  {\n    path: 'postListBought', component: PostListBoughtComponent, canActivate: [AuthGuard]\n  },\n  {\n    path: 'edit/:postId', component: PostCreateComponent, canActivate: [AdminGuard]\n  },\n  {\n    path: 'login', component: LoginComponent\n  },\n  {\n    path: 'signup', component: SignupComponent\n  },\n  {\n    path: 'createModerator', component: CreateModeratorComponent, canActivate: [AdminGuard]\n  },\n  {\n    path: 'modifyPassword', component: ModifyPasswordComponent\n  },\n  {\n    path: 'message/:postId', component: PostMessagesComponent, canActivate: [AuthGuard]\n  },\n  {\n    path: 'bid/:postId', component: PostBidComponent, canActivate: [AuthGuard]\n  },\n  {\n    path: 'buy/:postId', component: PostBuyComponent, canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard, AdminGuard]\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n","<app-header></app-header>\n<main>\n  <script src=\"https://www.paypal.com/sdk/js?client-id=AZILAWi_q3OkRNvJv7UNMe_VVYkEn-aet3eC21Mdn4asXxNxQzwL9mSPpEZWS3QbPDBQobxsnW26fKGE\"></script>\n  <router-outlet> </router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n//created\nimport { HeaderComponent } from './header/header.component';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './error-interceptor';\nimport { ErrorComponent } from './error/error.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { PostsModule } from './posts/post-create/post.module';\nimport { AuthModule } from './auth/auth-module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    PostsModule,\n    AngularMaterialModule,\n    AuthModule,\n    FlexLayoutModule\n\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule { }\n","import { CanActivate, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';;\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(route: import(\"@angular/router\").ActivatedRouteSnapshot, state: import(\"@angular/router\").RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\n    const isAdmin = this.authService.getIsAdmin();\n    const isVerified = this.authService.getIsVerified();\n    if(!isAdmin || !isVerified) {\n      this.authService.logout();\n      this.router.navigate(['/login'], {skipLocationChange: true});\n    }\n    return isAdmin;\n  }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set(\"Authorization\", \"Bearer \" + authToken)\n    });\n    return next.handle(authRequest);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { CreateModeratorComponent } from './createModerator/createModerator.component';\nimport { ModifyPasswordComponent } from './modifyPassword/modifyPassword.component';\nimport { UserListComponent } from './userList/user-list.component';\nimport { FormsModule } from '@angular/forms'\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent,\n    CreateModeratorComponent,\n    ModifyPasswordComponent,\n    UserListComponent\n  ],\n  imports: [\n    CommonModule,\n    AngularMaterialModule,\n    RouterModule,\n    FormsModule\n  ]\n})\nexport class AuthModule {}\n","import { CanActivate, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';;\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(route: import(\"@angular/router\").ActivatedRouteSnapshot, state: import(\"@angular/router\").RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\n    const isAuth = this.authService.getIsAuth();\n    if(!isAuth) {\n      this.router.navigate(['/login'], {skipLocationChange: true});\n    }\n    return isAuth;\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { AuthData } from \"./auth-data.model\";\n\nimport { environment } from \"../../environments/environment\";\n\n\nconst BACKEND_URL = environment.apiUrl + \"/user\";\n\n@Injectable({ providedIn: \"root\" })\nexport class AuthService {\n  private users: AuthData[] = [];\n  private usersUpdated = new Subject<{users: AuthData[], usersCount: number}>();\n  private isAuthenticated = false;\n  private token: string;\n  private tokenTimer: any;\n  private authStatusListener = new Subject<boolean>();\n  private userId: string;\n  private isAdmin: boolean;\n  private isVerified: boolean;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  getIsAdmin() {\n    return this.isAdmin;\n  }\n\n  getIsVerified() {\n    return this.isVerified;\n  }\n\n  getAllUsers() {\n    this.http\n    .get<{message: string, users: any, maxUsers: number}>(\n      BACKEND_URL)\n    .subscribe( response => {\n      this.users = response.users;\n      this.usersUpdated.next({users: [...this.users], usersCount: response.maxUsers})\n    })\n  }\n\n  getUsersUpdateListener() {\n    return this.usersUpdated.asObservable();\n  }\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password, admin: false, isVerified: true };\n    this.http\n      .post( BACKEND_URL + \"/signup\", authData)\n      .subscribe(response => {\n        this.login(authData.email, authData.password);\n      }, error => {\n        this.authStatusListener.next(false);\n      }\n      );\n\n  }\n\n  createModerator(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password, admin: true, isVerified: false};\n    this.http\n      .post( BACKEND_URL + \"/createModerator\", authData)\n      .subscribe(response => {\n        this.router.navigate([\"/postList\"], {skipLocationChange: true});\n        alert(\"Moderator created! \\n\" + \"Email: \" + email + \"\\nPassword: \" + password);\n      }, error => {\n        this.authStatusListener.next(false);\n      });\n  }\n\n  updatePassword(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password, admin: true, isVerified: true};\n    this.http\n    .put( BACKEND_URL + \"/modifyPassword/\" + this.userId, authData)\n    .subscribe(response => {\n      this.isVerified = true;\n      this.router.navigate([\"/postList\"], {skipLocationChange: true});\n      alert(\"Password changed!\");\n    }, error => {\n      this.logout();\n    });\n\n  }\n\n  login(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password, admin: false, isVerified: false };\n    this.http\n      .post<{ token: string; expiresIn: number, userId: string, admin: boolean, isVerified: boolean}>(\n        BACKEND_URL + \"/login\",\n        authData\n      )\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          this.isAuthenticated = true;\n          this.userId = response.userId;\n          this.isAdmin = response.admin;\n          this.isVerified = response.isVerified;\n          this.authStatusListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n          this.saveAuthData(token, expirationDate, this.userId, this.isAdmin, this.isVerified);\n          if(this.isVerified) this.router.navigate([\"/postList\"], {skipLocationChange: true}); else\n          this.router.navigate([\"/modifyPassword\"]);\n        }\n      }, _ => {\n        this.authStatusListener.next(false);}\n        );\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      this.router.navigate(['/postList'], {skipLocationChange: true});\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.userId = authInformation.userId;\n      this.isAdmin = JSON.parse(authInformation.isAdmin);\n      this.isVerified = JSON.parse(authInformation.isVerified);\n      this.setAuthTimer(expiresIn / 1000);\n      this.router.navigate(['/postList'], {skipLocationChange: true});\n      this.authStatusListener.next(true);\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.isAdmin = false;\n    this.isVerified = false;\n    this.authStatusListener.next(false);\n    this.userId = null;\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate([\"/login\"], {skipLocationChange: true});\n  }\n\n  private setAuthTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string, isAdmin: boolean, isVerified: boolean) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\n    localStorage.setItem(\"userId\", userId);\n    localStorage.setItem(\"isAdmin\", String(isAdmin));\n    localStorage.setItem(\"isVerified\", String(isVerified))\n\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiration\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"isAdmin\");\n    localStorage.removeItem(\"isVerified\");\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem(\"token\");\n    const expirationDate = localStorage.getItem(\"expiration\");\n    const userId = localStorage.getItem(\"userId\");\n    const isAdmin = localStorage.getItem(\"isAdmin\");\n    const isVerified = localStorage.getItem(\"isVerified\");\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId,\n      isAdmin: isAdmin,\n      isVerified: isVerified\n    }\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  deleteUser(postId: string) {\n    return this.http.delete(BACKEND_URL + \"/\" + postId)\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  styleUrls: ['./createModerator.component.css'],\n  templateUrl: './createModerator.component.html'\n})\n\nexport class CreateModeratorComponent implements OnInit, OnDestroy {\n\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n  onSignup(form: NgForm) {\n    if (form.invalid) { return; }\n    this.isLoading = true;\n    this.authService.createModerator(form.value.email ,form.value.password)\n  }\n}\n","<mat-card class=\"flex\">\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form  (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input matInput name=\"email\" ngModel type = \"email\" placeholder= \"E-mail\" #emailInput=\"ngModel\" required email>\n        <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required >\n        <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n      </mat-form-field>\n    <br>\n    <button\n      *ngIf=\"!isLoading\"\n      mat-raised-button\n      color = \"primary\"\n      type=\"submit\">Add Moderator\n    </button>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    </form>\n\n</mat-card>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { AuthService } from \"../auth.service\";\nimport { Subscription } from 'rxjs';\n\n@Component({\n  styleUrls: ['./login.component.css'],\n  templateUrl: './login.component.html'\n})\n\nexport class LoginComponent implements OnInit, OnDestroy {\n\n\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n\n  onLogin(form: NgForm) {\n    if(form.invalid) { return; }\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n}\n","<mat-card class=\"flex\">\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input matInput name=\"email\" ngModel type = \"email\" placeholder= \"E-mail\" #emailInput=\"ngModel\" required email>\n        <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required >\n        <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n      </mat-form-field>\n    <br>\n    <button\n    *ngIf=\"!isLoading\"\n      mat-raised-button\n      color = \"primary\"\n      type=\"submit\">Login\n    </button>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    </form>\n</mat-card>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  styleUrls: ['./modifyPassword.component.css'],\n  templateUrl: './modifyPassword.component.html'\n})\n\nexport class ModifyPasswordComponent implements OnInit, OnDestroy {\n\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n  onSignup(form: NgForm) {\n    if (form.invalid) { return; }\n    this.isLoading = true;\n    this.authService.updatePassword(form.value.email ,form.value.password)\n  }\n}\n","<mat-card class=\"flex\">\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form  (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input matInput name=\"email\" ngModel type = \"email\" placeholder= \"E-mail\" #emailInput=\"ngModel\" required email>\n        <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required >\n        <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n      </mat-form-field>\n    <br>\n    <button\n      *ngIf=\"!isLoading\"\n      mat-raised-button\n      color = \"primary\"\n      type=\"submit\">Modify Passowrd!\n    </button>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    </form>\n\n</mat-card>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  styleUrls: ['./signup.component.css'],\n  templateUrl: './signup.component.html'\n})\n\nexport class SignupComponent implements OnInit, OnDestroy {\n\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n  onSignup(form: NgForm) {\n    if (form.invalid) { return; }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email ,form.value.password)\n  }\n}\n","<mat-card class=\"flex\">\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form  (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input matInput name=\"email\" ngModel type = \"email\" placeholder= \"E-mail\" #emailInput=\"ngModel\" required email>\n        <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required >\n        <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n      </mat-form-field>\n    <br>\n    <button\n      *ngIf=\"!isLoading\"\n      mat-raised-button\n      color = \"primary\"\n      type=\"submit\">Register\n    </button>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    </form>\n\n</mat-card>\n","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport { AuthData } from '../auth-data.model'\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\n\nexport class UserListComponent implements OnInit {\n  users: AuthData[] = [];\n  private authSub: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.getAllUsers();\n    this.authSub = this.authService.getUsersUpdateListener()\n    .subscribe(\n      (postData: {users: AuthData[], usersCount: number}) =>  {\n        this.users = postData.users;\n      }\n    );\n  }\n\n  onDelete(email: string) {\n    this.authService.deleteUser(email).subscribe( () => {\n      this.ngOnInit()\n    });\n  }\n\n}\n","<mat-accordion multi=\"true\">\n  <mat-expansion-panel *ngFor=\"let user of users\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{user.email}}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-panel-description>\n    <mat-action-row>\n      <button mat-button color = \"warn\" (click) = \"onDelete(user.email)\"> DELETE </button>\n    </mat-action-row>\n  </mat-panel-description>\n  </mat-expansion-panel>\n</mat-accordion>\n\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrorComponent } from './error/error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private dialog: MatDialog) {}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = \"An uknown error ocurred!\"\n        if(error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\n        return throwError(error);\n      })\n    );\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}) {}\n}\n","<h1 mat-mat-dialog-title>An Error Occured!</h1>\n<div mat-dialog-content>\n<p class=\"mat-body-1\"> {{data.message}}</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Okay</button>\n</div>\n","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css' ]\n})\n\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  constructor(private authService: AuthService) { }\n\n  userIsAuthenticated = false;\n  userIsAdmin = false;\n  private authListenerSubs: Subscription;\n  title = \"Books List\"\n\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.userIsAdmin = this.authService.getIsAdmin();\n    this.authListenerSubs = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userIsAdmin = this.authService.getIsAdmin();\n    });\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <span><a routerLink=\"/postList\">{{title}}</a></span>\n  <span fxFlex></span>\n    <ul>\n      <li *ngIf=\"userIsAdmin\">\n        <a mat-button routerLink=\"/createModerator\" routerLinkActive=\"mat-accent\">Add Moderator</a>\n      </li>\n      <li *ngIf=\"userIsAdmin\">\n        <a mat-button routerLink=\"/postListExpired\" routerLinkActive=\"mat-accent\">Expired Post</a>\n      </li>\n      <li *ngIf=\"userIsAdmin\">\n        <a mat-button routerLink=\"/postListSold\" routerLinkActive=\"mat-accent\">Sold Post</a>\n      </li>\n      <li *ngIf=\"userIsAdmin\">\n        <a mat-button routerLink=\"/userList\" routerLinkActive=\"mat-accent\">User List</a>\n      </li>\n      <li *ngIf=\"userIsAuthenticated && !userIsAdmin\">\n        <a mat-button routerLink=\"/postListSelling\" routerLinkActive=\"mat-accent\">My posts</a>\n      </li>\n      <li *ngIf=\"userIsAuthenticated && !userIsAdmin\">\n        <a mat-button routerLink=\"/postListBuying\" routerLinkActive=\"mat-accent\">My bids</a>\n      </li>\n      <li *ngIf=\"userIsAuthenticated && !userIsAdmin\">\n        <a mat-button routerLink=\"/postListWon\" routerLinkActive=\"mat-accent\">My won bids</a>\n      </li>\n      <li *ngIf=\"userIsAuthenticated && !userIsAdmin\">\n        <a mat-button routerLink=\"/postListBought\" routerLinkActive=\"mat-accent\">Bought Products</a>\n      </li>\n      <li *ngIf=\"userIsAuthenticated && !userIsAdmin\">\n        <a mat-button routerLink=\"/createPost\" routerLinkActive=\"mat-accent\">New post</a>\n      </li>\n      <li *ngIf=\"!userIsAuthenticated\">\n        <a mat-button routerLink=\"/login\" routerLinkActive=\"mat-accent\">Login</a>\n      </li>\n      <li *ngIf=\"!userIsAuthenticated\">\n        <a mat-button routerLink=\"/signup\" routerLinkActive=\"mat-accent\">Signup</a>\n      </li>\n      <li *ngIf=\"userIsAuthenticated\">\n        <button mat-button (click)=\"onLogout()\">Logout</button>\n      </li>\n    </ul>\n</mat-toolbar>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(items: any[], searchText: string, fieldName: string): any[] {\n\n    if (!items) { return []; }\n\n    if (!searchText) { return items; }\n\n    searchText = searchText.toLowerCase();\n\n    return items.filter(item => {\n      if (item && item[fieldName]) {\n        return item[fieldName].toLowerCase().includes(searchText);\n      }\n      return false;\n    });\n   }\n\n}\n\n\n@Pipe({\n  name: 'filterNumberLow'\n})\nexport class FilterPipeNumberLow implements PipeTransform {\n\n  transform(items: any[], searchText: number, fieldName: string): any[] {\n\n    if (!items) { return []; }\n\n    if (!searchText) { return items; }\n\n    return items.filter(item => {\n      if (item && item[fieldName] >= searchText ) {\n        return item[fieldName];\n      }\n      return false;\n    });\n   }\n\n}\n\n@Pipe({\n  name: 'filterNumberHigh'\n})\nexport class FilterPipeNumberHigh implements PipeTransform {\n\n  transform(items: any[], searchText: number, fieldName: string): any[] {\n\n    if (!items) { return []; }\n\n    if (!searchText) { return items; }\n\n    return items.filter(item => {\n      if (item && item[fieldName] <= searchText ) {\n        return item[fieldName];\n      }\n      return false;\n    });\n   }\n\n}\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\n\n@Pipe({ name: 'jsonFilterBy' })\n@Injectable()\nexport class JsonFilterByPipe implements PipeTransform {\n\n  transform(json: any[], args: any[]) : any[] {\n    var searchText = args[0];\n    var jsonKey = args[1];\n\n    if(searchText == null || searchText == 'undefined') return json;\n    if(jsonKey    == null || jsonKey    == 'undefined') return json;\n\n    var returnObjects = json;\n    json.forEach( function ( filterObjectEntery ) {\n\n      if( filterObjectEntery.hasOwnProperty( jsonKey ) ) {\n\n        if ( typeof filterObjectEntery[jsonKey] != \"undefined\" &&\n        filterObjectEntery[jsonKey].toLowerCase().indexOf(searchText.toLowerCase()) > -1 ) {\n        } else {\n            returnObjects = returnObjects.filter(obj => obj !== filterObjectEntery);\n        }\n      } else {\n      }\n\n    })\n    return returnObjects;\n  }\n}\n","import {Component, OnInit, AfterViewChecked} from '@angular/core';\nimport { Post } from '../post.model';\nimport { PostsService } from '../post.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\ndeclare let paypal: any;\n\n@Component({\n  templateUrl: './post-bid.component.html',\n  styleUrls: ['./post-bid.component.css']\n})\nexport class PostBidComponent implements OnInit {\n\n  constructor(public postsService: PostsService, public authService: AuthService, public route: ActivatedRoute) {}\n  private postId: string;\n  public post: Post;\n  public isLoading = false;\n  form: FormGroup;\n  finalAmount: number = 1;\n  currentUser: string;\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      amount: new FormControl(null)\n    });\n    this.currentUser = this.authService.getUserId();\n    this.route.paramMap.subscribe( (paramMap: ParamMap) => {\n      if(paramMap.has('postId')) {\n        this.postId = paramMap.get('postId');\n        this.isLoading = true;\n        this.postsService.getPost(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.post = {\n            id: postData._id,\n            title: postData.title,\n            content: postData.content,\n            imagePath: postData.imagePath,\n            creator: postData.creator,\n            course: postData.course,\n            university: postData.university,\n            author: postData.author,\n            messages: postData.messages,\n            startingPrice: postData.startingPrice,\n            minimumAllowedPrice: postData.minimumAllowedPrice,\n            winner: postData.winner,\n            date: postData.date,\n            bought: postData.bought,\n            bidders: postData.bidders\n          };\n          this.finalAmount = postData.startingPrice;\n        });\n      }\n    });\n  }\n\n  onPostBid() {\n    if(this.form.invalid || this.form.value.amount <= this.finalAmount) {\n      alert(\"Ammount should be bigger than current price!\");\n      return;\n    }\n    this.post.winner = this.authService.getUserId();\n    this.post.startingPrice = this.form.value.amount;\n\n    if(!this.post.bidders.includes(this.authService.getUserId())) {this.post.bidders.push(this.authService.getUserId());}\n    this.postsService.updateBid(\n      this.post.id,\n      this.post.title,\n      this.post.content,\n      this.post.imagePath,\n      this.post.course,\n      this.post.university,\n      this.post.author,\n      this.post.messages,\n      this.post.startingPrice,\n      this.post.minimumAllowedPrice,\n      this.post.winner,\n      this.post.date,\n      this.post.bidders\n    );\n    this.finalAmount = this.post.startingPrice;\n    this.form.reset();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <mat-card-content *ngIf=\"!isLoading\">\n    <mat-card-title *ngIf=\"currentUser == post.winner\">You are currently winning this product!</mat-card-title>\n    Title: {{post.title}} <br>\n    Author: {{post.author}} <br>\n    Course: {{post.course}} <br>\n    University: {{post.university}} <br>\n    Content: {{post.content}} <br>\n    Price: {{post.startingPrice}}$ <br>\n    <img height=\"100\" width=\"100\" src={{post.imagePath}}>\n  </mat-card-content>\n  <h1 *ngIf=\"!isLoading\" align=\"center\">Bid </h1>\n  <form *ngIf=\"!isLoading\" [formGroup]=\"form\" (submit) = \"onPostBid()\">\n    <h4> Ammount should be bigger than the current price! </h4>\n    <mat-form-field>\n      <input\n      matInput type = \"number\"\n      formControlName = \"amount\"\n      placeholder= {{post.startingPrice+1}}>\n    </mat-form-field>\n    <br>\n    <button\n      mat-raised-button\n      color = \"primary\"\n      type=\"submit\"> Post Bid</button>\n      </form>\n</mat-card>\n\n\n\n","import {Component, OnInit, AfterViewChecked} from '@angular/core';\nimport { Post } from '../post.model';\nimport { PostsService } from '../post.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\ndeclare let paypal: any;\n\n@Component({\n  templateUrl: './post-buy.component.html',\n  styleUrls: ['./post-buy.component.css']\n})\nexport class PostBuyComponent implements OnInit, AfterViewChecked {\n\n  constructor(public postsService: PostsService, public authService: AuthService, public route: ActivatedRoute) {}\n  private postId: string;\n  public post: Post;\n  public isLoading = false;\n  form: FormGroup;\n  addScript: boolean = false;\n  paypalLoad: boolean = false;\n  finalAmount: number = 1;\n  currentUser: string;\n  paypalConfig = {\n    env: 'sandbox',\n    client: {\n      sandbox: 'AZILAWi_q3OkRNvJv7UNMe_VVYkEn-aet3eC21Mdn4asXxNxQzwL9mSPpEZWS3QbPDBQobxsnW26fKGE'\n    },\n    commit: true,\n    payment: (data, actions) => {\n      return actions.payment.create({\n        payment: {\n          transactions: [\n            {amount: { total: this.finalAmount, currency: 'EUR'}}\n          ]\n        }\n      })\n    },\n    onAuthorize: (data, actions) => {\n      return actions.payment.execute().then((payment) => {\n      });\n  },\n  onClick: () => {\n    this.onBuy();\n  }\n}\n\nngAfterViewChecked(): void {\n  if(!this.addScript) {\n    this.addPaypalScript().then(() => {\n      paypal.Button.render(this.paypalConfig, '#paypal-checkout-btn');\n      this.paypalLoad = false;\n    })\n  }\n}\n\naddPaypalScript() {\n  this.addScript = true;\n  return new Promise((resolve, reject) => {\n    let scriptTagElement = document.createElement('script');\n    scriptTagElement.src = \"https://www.paypalobjects.com/api/checkout.js\"\n    scriptTagElement.onload = resolve;\n    document.body.appendChild(scriptTagElement);\n  })\n}\n\n\n  ngOnInit() {\n    this.paypalLoad = true;\n    this.addScript = false;\n    this.currentUser = this.authService.getUserId();\n    this.route.paramMap.subscribe( (paramMap: ParamMap) => {\n      if(paramMap.has('postId')) {\n        this.postId = paramMap.get('postId');\n        this.isLoading = true;\n        this.postsService.getPost(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.post = {\n            id: postData._id,\n            title: postData.title,\n            content: postData.content,\n            imagePath: postData.imagePath,\n            creator: postData.creator,\n            course: postData.course,\n            university: postData.university,\n            author: postData.author,\n            messages: postData.messages,\n            startingPrice: postData.startingPrice,\n            minimumAllowedPrice: postData.minimumAllowedPrice,\n            winner: postData.winner,\n            date: postData.date,\n            bought: postData.bought,\n            bidders: postData.bidders\n          };\n          this.finalAmount = postData.startingPrice;\n        });\n      }\n    });\n  }\n\n  onBuy() {\n    this.postsService.buyProduct(\n      this.post.id,\n      this.post.title,\n      this.post.content,\n      this.post.imagePath,\n      this.post.course,\n      this.post.university,\n      this.post.author,\n      this.post.messages,\n      this.post.startingPrice,\n      this.post.minimumAllowedPrice,\n      this.post.winner,\n      this.post.date,\n      this.post.bidders\n    );\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <mat-card-content *ngIf=\"!isLoading\">\n    <mat-card-title *ngIf=\"currentUser == post.winner\">You won this product!</mat-card-title>\n    Title: {{post.title}} <br>\n    Author: {{post.author}} <br>\n    Course: {{post.course}} <br>\n    University: {{post.university}} <br>\n    Content: {{post.content}} <br>\n    Price: {{post.startingPrice}}$ <br>\n    <img height=\"100\" width=\"100\" src={{post.imagePath}}>\n  </mat-card-content>\n  <h1 *ngIf=\"!isLoading\" align=\"center\">Buy</h1>\n      <br> <br>\n      <input type =\"number\" disabled [(ngModel)] = \"finalAmount\">\n      <div id=\"paypal-checkout-btn\"></div>\n</mat-card>\n\n\n\n","import { AbstractControl } from \"@angular/forms\";\nimport { Observable, Observer, of } from \"rxjs\";\n\nexport const mimeType = (\n  control: AbstractControl\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n  if (typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer<{ [key: string]: any }>) => {\n      fileReader.addEventListener(\"loadend\", () => {\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n        let header = \"\";\n        let isValid = false;\n        for (let i = 0; i < arr.length; i++) {\n          header += arr[i].toString(16);\n        }\n        switch (header) {\n          case \"89504e47\":\n            isValid = true;\n            break;\n          case \"ffd8ffe0\":\n          case \"ffd8ffe1\":\n          case \"ffd8ffe2\":\n          case \"ffd8ffe3\":\n          case \"ffd8ffe8\":\n            isValid = true;\n            break;\n          default:\n            isValid = false;\n            break;\n        }\n        if (isValid) {\n          observer.next(null);\n        } else {\n          observer.next({ invalidMimeType: true });\n        }\n        observer.complete();\n      });\n      fileReader.readAsArrayBuffer(file);\n    }\n  );\n  return frObs;\n};\n","import {Component, OnInit} from '@angular/core';\nimport { Post } from '../post.model';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { PostsService } from '../post.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Validators } from '@angular/forms';\nimport { mimeType} from './mime-type.validator';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent implements OnInit {\n\n  constructor(public postsService: PostsService, public route: ActivatedRoute) {}\n  private mode = 'create';\n  private postId: string;\n  public post: Post;\n  public isLoading = false;\n  form: FormGroup;\n  imagePreview: string;\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      title: new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\n      author: new FormControl(null, {validators: [Validators.required]}),\n      content: new FormControl(null, {validators: [Validators.required]}),\n      course: new FormControl(null, {validators: [Validators.required]}),\n      university: new FormControl(null, {validators: [Validators.required]}),\n      image: new FormControl(null, {validators: [Validators.required], asyncValidators: [mimeType]}),\n      startingPrice: new FormControl(null, {validators: [Validators.required]}),\n      minimumAllowedPrice: new FormControl(null, {validators: [Validators.required]}),\n      date: new FormControl(null, {validators: [Validators.required]})\n    });\n    this.route.paramMap.subscribe( (paramMap: ParamMap) => {\n      if(paramMap.has('postId')) {\n        this.mode = 'edit';\n        this.postId = paramMap.get('postId');\n        this.isLoading = true;\n        this.postsService.getPost(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.post = {\n            id: postData._id,\n            title: postData.title,\n            content: postData.content,\n            imagePath: postData.imagePath,\n            creator: postData.creator,\n            course: postData.course,\n            university: postData.university,\n            author: postData.author,\n            messages: postData.messages,\n            startingPrice: postData.startingPrice,\n            minimumAllowedPrice: postData.minimumAllowedPrice,\n            winner: postData.winner,\n            date: postData.date,\n            bought: postData.bought,\n            bidders: postData.bidders\n          };\n          this.form.setValue({\n            title: this.post.title,\n            content: this.post.content,\n            image: this.post.imagePath,\n            course: this.post.course,\n            university: this.post.university,\n            author: this.post.author,\n            startingPrice: this.post.startingPrice,\n            minimumAllowedPrice: this.post.minimumAllowedPrice,\n            date: this.post.date\n          });\n        });\n      } else {\n        this.mode = 'create';\n        this.postId = null;\n      }\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({image: file});\n    this.form.get('image').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n        this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if(this.form.invalid || this.form.value.startingPrice <= 0 || this.form.value.minimumAllowedPrice <= 0) {\n      window.alert(\"Introduce all the fields and the image! Prices should be bigger than 0!\");\n      return;\n    }\n    this.isLoading = true;\n    if(this.mode == \"create\") {\n      this.postsService.addPost(\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image,\n        this.form.value.course,\n        this.form.value.university,\n        this.form.value.author,\n        this.form.value.startingPrice,\n        this.form.value.minimumAllowedPrice,\n        this.form.value.date\n      );\n    } else {\n      this.postsService.updatePost(\n        this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image,\n        this.form.value.course,\n        this.form.value.university,\n        this.form.value.author,\n        this.post.messages,\n        this.post.startingPrice,\n        this.post.minimumAllowedPrice,\n        this.post.winner,\n        this.post.date,\n        this.post.bidders\n        );\n    }\n    this.form.reset();\n    }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form [formGroup]=\"form\" (submit) = \"onSavePost()\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input\n        matInput type = \"text\"\n        formControlName=\"title\"\n        placeholder= \"Title\"\n        >\n        <mat-error *ngIf=\"form.get('title').invalid\">Put a title!</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input\n        matInput type = \"text\"\n        formControlName=\"author\"\n        placeholder= \"Author\"\n        >\n        <mat-error *ngIf=\"form.get('author').invalid\">Put an author!</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input\n        matInput type = \"text\"\n        formControlName=\"course\"\n        placeholder= \"Course\"\n        >\n        <mat-error *ngIf=\"form.get('course').invalid\">Put a course!</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input\n        matInput type = \"text\"\n        formControlName=\"university\"\n        placeholder= \"University\"\n        >\n        <mat-error *ngIf=\"form.get('university').invalid\">Put a course!</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input\n        matInput type = \"number\"\n        formControlName=\"startingPrice\"\n        placeholder= \"Starting Price\"\n        >\n        <mat-error *ngIf=\"form.get('startingPrice').invalid\">Put a starting price!</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input\n        matInput type = \"number\"\n        formControlName=\"minimumAllowedPrice\"\n        placeholder= \"Minimum Allowed Price\"\n        >\n        <mat-error *ngIf=\"form.get('minimumAllowedPrice').invalid\">Put a minimum allowed price!</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <mat-label>Expiration Date</mat-label>\n        <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n        <mat-datepicker #picker1></mat-datepicker>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n      <br>\n      <div>\n        <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">Pick image!</button>\n        <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\n      </div>\n      <div class=\"image-preview\" *ngIf=\"imagePreview !=='' && imagePreview && form.get('image').valid\">\n        <img [src] = \"imagePreview\" [alt]=\"form.value.title\">\n      </div>\n      <br>\n      <mat-form-field>\n        <textarea matInput\n        rows=\"1\"\n        formControlName=\"content\"\n        placeholder= \"Post Content\"\n        >\n        </textarea>\n        <mat-error *ngIf=\"form.get('content').invalid\">Put a content!</mat-error>\n      </mat-form-field>\n      <br>\n    <button\n      mat-raised-button\n      color = \"primary\"\n      type=\"submit\">Save Button\n    </button>\n    </form>\n</mat-card>\n","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport { Post } from '../post.model'\nimport { PostsService } from '../post.service';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material/paginator';\nimport { AuthService } from '../../../auth/auth.service';\n\n@Component({\n  templateUrl: './post-list-bought.component.html',\n  styleUrls: ['./post-list-bought.component.css']\n})\n\nexport class PostListBoughtComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 10;\n  currentPage = 1;\n  pageSizeOption = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userIsAdmin = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n  searchTitle: string;\n  searchAuthor: string;\n  searchUniversity: string;\n  searchCourse: string;\n  today = Date.now();\n\n\n  constructor(public postsService: PostsService, private authService: AuthService) {\n    setInterval(() => {this.today = Date.now()}, 1);\n  }\n\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.userId = this.authService.getUserId();\n    this.postsService.getPostsBought(this.postsPerPage, this.currentPage, this.userId);\n    this.postsSub = this.postsService.getPostUpdateListener()\n    .subscribe(\n      (postData: {posts: Post[], postCount: number}) =>  {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.posts = postData.posts;\n      }\n    );\n\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.userIsAdmin = this.authService.getIsAdmin();\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPostsBought(this.postsPerPage, this.currentPage, this.userId);\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<mat-accordion multi=\"true\" *ngIf = \"posts.length>0 && !isLoading\">\n  <input type=\"text\" [(ngModel)]=\"searchTitle\" placeholder=\"Search Title\" />\n  <input type=\"text\" [(ngModel)]=\"searchAuthor\" placeholder=\"Search Author\" />\n  <input type=\"text\" [(ngModel)]=\"searchUniversity\" placeholder=\"Search University\" />\n  <input type=\"text\" [(ngModel)]=\"searchCourse\" placeholder=\"Search Course\" />\n  <br>\n  <br>\n  <mat-expansion-panel *ngFor=\"let post of posts | filter: searchAuthor : 'author' | filter: searchTitle : 'title' | filter: searchCourse: 'course' | filter: searchUniversity : 'university' \">\n    <mat-expansion-panel-header>\n      <mat-panel-title *ngIf=\"post.date < today \">\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: BOUGHT, Price: {{post.startingPrice}}$, You bought this product!\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-panel-description>\n    <p> Author: {{post.author}} </p>\n    <p> University: {{post.university}} </p>\n    <p> Course: {{post.course}} </p>\n    <p> Content: {{post.content}} </p>\n    <div class = \"post-image\">\n      <img [src]=\"post.imagePath\"  [alt]=\"post.title\">\n    </div>\n  </mat-panel-description>\n  </mat-expansion-panel>\n</mat-accordion>\n<mat-paginator *ngIf = \"posts.length>0\" [length]=\"totalPosts\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"pageSizeOption\" (page)=\"onChangedPage($event)\" ></mat-paginator>\n<p class = \"info-text mat-body-1\" *ngIf=\"posts.length == 0 && !isLoading\">No products bought yet!</p>\n\n","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport { Post } from '../post.model'\nimport { PostsService } from '../post.service';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material/paginator';\nimport { AuthService } from '../../../auth/auth.service';\n\n@Component({\n  templateUrl: './post-list-buying.component.html',\n  styleUrls: ['./post-list-buying.component.css']\n})\n\nexport class PostListBuyingComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 10;\n  currentPage = 1;\n  pageSizeOption = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userIsAdmin = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n  searchTitle: string;\n  searchAuthor: string;\n  searchUniversity: string;\n  searchCourse: string;\n  today = Date.now();\n\n\n  constructor(public postsService: PostsService, private authService: AuthService) {\n    setInterval(() => {this.today = Date.now()}, 1);\n  }\n\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.userId = this.authService.getUserId();\n    this.postsService.getPostsBiding(this.postsPerPage, this.currentPage, this.userId);\n    this.postsSub = this.postsService.getPostUpdateListener()\n    .subscribe(\n      (postData: {posts: Post[], postCount: number}) =>  {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.posts = postData.posts;\n      }\n    );\n\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.userIsAdmin = this.authService.getIsAdmin();\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPostsBiding(this.postsPerPage, this.currentPage, this.userId);\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<mat-accordion multi=\"true\" *ngIf = \"posts.length>0 && !isLoading\">\n  <input type=\"text\" [(ngModel)]=\"searchTitle\" placeholder=\"Search Title\" />\n  <input type=\"text\" [(ngModel)]=\"searchAuthor\" placeholder=\"Search Author\" />\n  <input type=\"text\" [(ngModel)]=\"searchUniversity\" placeholder=\"Search University\" />\n  <input type=\"text\" [(ngModel)]=\"searchCourse\" placeholder=\"Search Course\" />\n  <br>\n  <br>\n  <mat-expansion-panel *ngFor=\"let post of posts | filter: searchAuthor : 'author' | filter: searchTitle : 'title' | filter: searchCourse: 'course' | filter: searchUniversity : 'university' \">\n    <mat-expansion-panel-header  *ngIf=\"post.date > today && userId == post.winner \">\n      <mat-panel-title>\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: {{ post.date - today | date:'dd:hh:mm:ss'}}, Price: {{post.startingPrice}}$, You are currently winning this product!\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-expansion-panel-header  *ngIf=\"post.date > today && userId != post.winner \">\n      <mat-panel-title>\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: {{ post.date - today | date:'dd:hh:mm:ss'}}, Price: {{post.startingPrice}}$, You were surpassed!\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-panel-description>\n    <p> Author: {{post.author}} </p>\n    <p> University: {{post.university}} </p>\n    <p> Course: {{post.course}} </p>\n    <p> Content: {{post.content}} </p>\n    <div class = \"post-image\">\n      <img [src]=\"post.imagePath\"  [alt]=\"post.title\">\n    </div>\n    <mat-action-row *ngIf=\"userIsAuthenticated && !userIsAdmin\">\n      <a mat-button color = \"primary\" [routerLink]=\"['/bid', post.id]\" *ngIf=\"userId!= post.creator\"> BID </a>\n      <a mat-button color = \"primary\" [routerLink]=\"['/message', post.id]\" *ngIf=\"userId!= post.creator\"> MESSAGE SELLER </a>\n    </mat-action-row>\n  </mat-panel-description>\n  </mat-expansion-panel>\n</mat-accordion>\n<mat-paginator *ngIf = \"posts.length>0\" [length]=\"totalPosts\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"pageSizeOption\" (page)=\"onChangedPage($event)\" ></mat-paginator>\n<p class = \"info-text mat-body-1\" *ngIf=\"posts.length == 0 && !isLoading\">No current bids!</p>\n\n","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport { Post } from '../post.model'\nimport { PostsService } from '../post.service';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material/paginator';\nimport { AuthService } from '../../../auth/auth.service';\n\n@Component({\n  templateUrl: './post-list-expired.component.html',\n  styleUrls: ['./post-list-expired.component.css']\n})\n\nexport class PostListExpiredComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 10;\n  currentPage = 1;\n  pageSizeOption = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userIsAdmin = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n  searchTitle: string;\n  searchAuthor: string;\n  searchUniversity: string;\n  searchCourse: string;\n  today = Date.now();\n\n\n  constructor(public postsService: PostsService, private authService: AuthService) {\n    setInterval(() => {this.today = Date.now()}, 1);\n  }\n\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.userId = this.authService.getUserId();\n    this.postsService.getPostsExpired(this.postsPerPage, this.currentPage);\n    this.postsSub = this.postsService.getPostUpdateListener()\n    .subscribe(\n      (postData: {posts: Post[], postCount: number}) =>  {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.posts = postData.posts;\n      }\n    );\n\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.userIsAdmin = this.authService.getIsAdmin();\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPostsExpired(this.postsPerPage, this.currentPage);\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<mat-accordion multi=\"true\" *ngIf = \"posts.length>0 && !isLoading\">\n  <h3> Total number of expired posts: {{totalPosts}} </h3>\n  <input type=\"text\" [(ngModel)]=\"searchTitle\" placeholder=\"Search Title\" />\n  <input type=\"text\" [(ngModel)]=\"searchAuthor\" placeholder=\"Search Author\" />\n  <input type=\"text\" [(ngModel)]=\"searchUniversity\" placeholder=\"Search University\" />\n  <input type=\"text\" [(ngModel)]=\"searchCourse\" placeholder=\"Search Course\" />\n  <br>\n  <br>\n  <mat-expansion-panel *ngFor=\"let post of posts | filter: searchAuthor : 'author' | filter: searchTitle : 'title' | filter: searchCourse: 'course' | filter: searchUniversity : 'university' \">\n    <mat-expansion-panel-header>\n      <mat-panel-title *ngIf=\"post.date > today \">\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: {{ post.date - today | date:'dd:hh:mm:ss'}}, Price: {{post.startingPrice}}$\n      </mat-panel-title>\n      <mat-panel-title *ngIf=\"post.date < today \">\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: EXPIRED, Price: {{post.startingPrice}}$\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-panel-description>\n    <p> Author: {{post.author}} </p>\n    <p> University: {{post.university}} </p>\n    <p> Course: {{post.course}} </p>\n    <p> Content: {{post.content}} </p>\n    <div class = \"post-image\">\n      <img [src]=\"post.imagePath\"  [alt]=\"post.title\">\n    </div>\n  </mat-panel-description>\n  </mat-expansion-panel>\n</mat-accordion>\n<!-- <mat-paginator *ngIf = \"posts.length>0\" [length]=\"totalPosts\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"pageSizeOption\" (page)=\"onChangedPage($event)\" ></mat-paginator> -->\n<p class = \"info-text mat-body-1\" *ngIf=\"posts.length == 0 && !isLoading\">No posts added yet!</p>\n\n","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport { Post } from '../post.model'\nimport { PostsService } from '../post.service';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material/paginator';\nimport { AuthService } from '../../../auth/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from \"../../../../environments/environment\";\nimport * as io from 'socket.io-client';\n\n@Component({\n  templateUrl: './post-list-selling.component.html',\n  styleUrls: ['./post-list-selling.component.css']\n})\n\nexport class PostListSellingComponent implements OnInit, OnDestroy {\n  socket;\n  posts: Post[] = [];\n\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 10;\n  currentPage = 1;\n  pageSizeOption = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userIsAdmin = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n  searchTitle: string;\n  searchAuthor: string;\n  searchUniversity: string;\n  searchCourse: string;\n  today = Date.now();\n\n\n  constructor(public postsService: PostsService, private authService: AuthService, private http: HttpClient) {\n    setInterval(() => {this.today = Date.now()}, 1);\n    this.socket = io(environment.api);\n  }\n\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.userId = this.authService.getUserId();\n    this.postsService.getPostsSelling(this.postsPerPage, this.currentPage, this.userId);\n    this.postsSub = this.postsService.getPostUpdateListener()\n    .subscribe(\n      (postData: {posts: Post[], postCount: number}) =>  {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.posts = postData.posts;\n      }\n    );\n\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.userIsAdmin = this.authService.getIsAdmin();\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n\n    this.socket.once('postUpdated', () => {\n      this.ngOnInit();\n      window.alert(\"someone bid/bought one of your post!\")\n    })\n\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPostsSelling(this.postsPerPage, this.currentPage, this.userId);\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<mat-accordion multi=\"true\" *ngIf = \"posts.length>0 && !isLoading\">\n  <input type=\"text\" [(ngModel)]=\"searchTitle\" placeholder=\"Search Title\" />\n  <input type=\"text\" [(ngModel)]=\"searchAuthor\" placeholder=\"Search Author\" />\n  <input type=\"text\" [(ngModel)]=\"searchUniversity\" placeholder=\"Search University\" />\n  <input type=\"text\" [(ngModel)]=\"searchCourse\" placeholder=\"Search Course\" />\n  <br>\n  <br>\n  <mat-expansion-panel *ngFor=\"let post of posts | filter: searchAuthor : 'author' | filter: searchTitle : 'title' | filter: searchCourse: 'course' | filter: searchUniversity : 'university' \">\n    <mat-expansion-panel-header>\n      <mat-panel-title *ngIf=\"post.date > today \">\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: {{ post.date - today | date:'dd:hh:mm:ss'}}, Price: {{post.startingPrice}}$\n      </mat-panel-title>\n      <mat-panel-title *ngIf=\"post.date < today && post.startingPrice >= post.minimumAllowedPrice && post.bought == false\">\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: WAITING FOR WINNER TO BUY, Price: {{post.startingPrice}}$\n      </mat-panel-title>\n      <mat-panel-title *ngIf=\"post.date < today && post.startingPrice >= post.minimumAllowedPrice && post.bought == true\">\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: SOLD, Price: {{post.startingPrice}}$\n      </mat-panel-title>\n      <mat-panel-title *ngIf=\"post.date < today && post.startingPrice < post.minimumAllowedPrice\">\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: EXPIRED AND NOT SOLD, Price: {{post.startingPrice}}$\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-panel-description>\n    <p> Author: {{post.author}} </p>\n    <p> University: {{post.university}} </p>\n    <p> Course: {{post.course}} </p>\n    <p> Content: {{post.content}} </p>\n    <div class = \"post-image\">\n      <img [src]=\"post.imagePath\"  [alt]=\"post.title\">\n    </div>\n    <mat-action-row *ngIf=\"userIsAuthenticated && !userIsAdmin\">\n      <a mat-button color = \"primary\" [routerLink]=\"['/message', post.id]\" *ngIf=\"userId == post.creator\"> SEE MESSAGES ON YOUR POST </a>\n    </mat-action-row>\n  </mat-panel-description>\n  </mat-expansion-panel>\n</mat-accordion>\n<mat-paginator *ngIf = \"posts.length>0\" [length]=\"totalPosts\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"pageSizeOption\" (page)=\"onChangedPage($event)\" ></mat-paginator>\n<p class = \"info-text mat-body-1\" *ngIf=\"posts.length == 0 && !isLoading\">No posts added yet!</p>\n\n","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport { Post } from '../post.model'\nimport { PostsService } from '../post.service';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material/paginator';\nimport { AuthService } from '../../../auth/auth.service';\n\n@Component({\n  templateUrl: './post-list-sold.component.html',\n  styleUrls: ['./post-list-sold.component.css']\n})\n\nexport class PostListSoldComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 10;\n  currentPage = 1;\n  pageSizeOption = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userIsAdmin = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n  searchTitle: string;\n  searchAuthor: string;\n  searchUniversity: string;\n  searchCourse: string;\n  today = Date.now();\n\n\n  constructor(public postsService: PostsService, private authService: AuthService) {\n    setInterval(() => {this.today = Date.now()}, 1);\n  }\n\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.userId = this.authService.getUserId();\n    this.postsService.getPostsSold(this.postsPerPage, this.currentPage);\n    this.postsSub = this.postsService.getPostUpdateListener()\n    .subscribe(\n      (postData: {posts: Post[], postCount: number}) =>  {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.posts = postData.posts;\n      }\n    );\n\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.userIsAdmin = this.authService.getIsAdmin();\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPostsSold(this.postsPerPage, this.currentPage);\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<mat-accordion multi=\"true\" *ngIf = \"posts.length>0 && !isLoading\">\n  <h3> Total number of sold posts: {{totalPosts}} </h3>\n  <input type=\"text\" [(ngModel)]=\"searchTitle\" placeholder=\"Search Title\" />\n  <input type=\"text\" [(ngModel)]=\"searchAuthor\" placeholder=\"Search Author\" />\n  <input type=\"text\" [(ngModel)]=\"searchUniversity\" placeholder=\"Search University\" />\n  <input type=\"text\" [(ngModel)]=\"searchCourse\" placeholder=\"Search Course\" />\n  <br>\n  <br>\n  <mat-expansion-panel *ngFor=\"let post of posts | filter: searchAuthor : 'author' | filter: searchTitle : 'title' | filter: searchCourse: 'course' | filter: searchUniversity : 'university' \">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Title: {{post.title}}, Author: {{post.author}}, SOLD, minimumPrice: {{post.minimumAllowedPrice}}, offeredPrice: {{post.startingPrice}}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-panel-description>\n    <p> Author: {{post.author}} </p>\n    <p> University: {{post.university}} </p>\n    <p> Course: {{post.course}} </p>\n    <p> Content: {{post.content}} </p>\n    <div class = \"post-image\">\n      <img [src]=\"post.imagePath\"  [alt]=\"post.title\">\n    </div>\n  </mat-panel-description>\n  </mat-expansion-panel>\n</mat-accordion>\n<mat-paginator *ngIf = \"posts.length>0\" [length]=\"totalPosts\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"pageSizeOption\" (page)=\"onChangedPage($event)\" ></mat-paginator>\n<p class = \"info-text mat-body-1\" *ngIf=\"posts.length == 0 && !isLoading\">No posts added yet!</p>\n\n","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport { Post } from '../post.model'\nimport { PostsService } from '../post.service';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material/paginator';\nimport { AuthService } from '../../../auth/auth.service';\n\n@Component({\n  templateUrl: './post-list-won.component.html',\n  styleUrls: ['./post-list-won.component.css']\n})\n\nexport class PostListWonComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 10;\n  currentPage = 1;\n  pageSizeOption = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userIsAdmin = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n  searchTitle: string;\n  searchAuthor: string;\n  searchUniversity: string;\n  searchCourse: string;\n  today = Date.now();\n\n\n  constructor(public postsService: PostsService, private authService: AuthService) {\n    setInterval(() => {this.today = Date.now()}, 1);\n  }\n\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.userId = this.authService.getUserId();\n    this.postsService.getPostsWon(this.postsPerPage, this.currentPage, this.userId);\n    this.postsSub = this.postsService.getPostUpdateListener()\n    .subscribe(\n      (postData: {posts: Post[], postCount: number}) =>  {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.posts = postData.posts;\n      }\n    );\n\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.userIsAdmin = this.authService.getIsAdmin();\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPostsWon(this.postsPerPage, this.currentPage, this.userId);\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<mat-accordion multi=\"true\" *ngIf = \"posts.length>0 && !isLoading\">\n  <input type=\"text\" [(ngModel)]=\"searchTitle\" placeholder=\"Search Title\" />\n  <input type=\"text\" [(ngModel)]=\"searchAuthor\" placeholder=\"Search Author\" />\n  <input type=\"text\" [(ngModel)]=\"searchUniversity\" placeholder=\"Search University\" />\n  <input type=\"text\" [(ngModel)]=\"searchCourse\" placeholder=\"Search Course\" />\n  <br>\n  <br>\n  <mat-expansion-panel *ngFor=\"let post of posts | filter: searchAuthor : 'author' | filter: searchTitle : 'title' | filter: searchCourse: 'course' | filter: searchUniversity : 'university' \">\n    <mat-expansion-panel-header>\n      <mat-panel-title *ngIf=\"post.date < today \">\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: WON, Price: {{post.startingPrice}}$, You won this product!\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-panel-description>\n    <p> Author: {{post.author}} </p>\n    <p> University: {{post.university}} </p>\n    <p> Course: {{post.course}} </p>\n    <p> Content: {{post.content}} </p>\n    <div class = \"post-image\">\n      <img [src]=\"post.imagePath\"  [alt]=\"post.title\">\n    </div>\n    <mat-action-row *ngIf=\"userIsAuthenticated && !userIsAdmin\">\n      <a mat-button color = \"primary\" [routerLink]=\"['/buy', post.id]\" *ngIf=\"userId!= post.creator\"> BUY </a>\n    </mat-action-row>\n  </mat-panel-description>\n  </mat-expansion-panel>\n</mat-accordion>\n<mat-paginator *ngIf = \"posts.length>0\" [length]=\"totalPosts\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"pageSizeOption\" (page)=\"onChangedPage($event)\" ></mat-paginator>\n<p class = \"info-text mat-body-1\" *ngIf=\"posts.length == 0 && !isLoading\">No auctions won!</p>\n\n","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport { Post } from '../post.model'\nimport { PostsService } from '../post.service';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material/paginator';\nimport { AuthService } from '../../../auth/auth.service';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\n\nexport class PostListComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 10;\n  currentPage = 1;\n  pageSizeOption = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userIsAdmin = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n  searchTitle: string;\n  searchAuthor: string;\n  searchUniversity: string;\n  searchCourse: string;\n  searchMinimumPrice: number;\n  searchMaximumPrice: number;\n  today = Date.now();\n  expired: boolean;\n\n\n  constructor(public postsService: PostsService, private authService: AuthService) {\n    setInterval(() => {this.today = Date.now()}, 1);\n  }\n\n  update() {\n    this.ngOnInit();\n    this.searchTitle = undefined;\n    this.searchAuthor = undefined;\n    this.searchCourse = undefined;\n    this.searchUniversity = undefined;\n    this.searchMinimumPrice = undefined;\n    this.searchMaximumPrice = undefined;\n  }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.userId = this.authService.getUserId();\n    this.postsService.getPosts(this.postsPerPage, this.currentPage, this.userId, this.searchAuthor, this.searchTitle, this.searchUniversity, this.searchCourse, this.searchMinimumPrice, this.searchMaximumPrice);\n    this.postsSub = this.postsService.getPostUpdateListener()\n    .subscribe(\n      (postData: {posts: Post[], postCount: number}) =>  {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.posts = postData.posts;\n      }\n    );\n\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.userIsAdmin = this.authService.getIsAdmin();\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n\n  onDelete(postId: string) {\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe( () => {\n      this.postsService.getPosts(this.postsPerPage, this.currentPage, this.userId, this.searchAuthor, this.searchTitle, this.searchUniversity, this.searchCourse, this.searchMinimumPrice, this.searchMaximumPrice);\n    });\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage, this.userId, this.searchAuthor, this.searchTitle, this.searchUniversity, this.searchCourse, this.searchMinimumPrice, this.searchMaximumPrice);\n  }\n\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<mat-accordion multi=\"true\" *ngIf = \"posts.length>0 && !isLoading\">\n  <h3 *ngIf=\"userIsAdmin\">Total Posts on sale: {{totalPosts}}</h3>\n  <input type=\"text\" [(ngModel)]=\"searchTitle\" placeholder=\"Search Title\" />\n  <input type=\"text\" [(ngModel)]=\"searchAuthor\" placeholder=\"Search Author\" />\n  <input type=\"text\" [(ngModel)]=\"searchUniversity\" placeholder=\"Search University\" />\n  <input type=\"text\" [(ngModel)]=\"searchCourse\" placeholder=\"Search Course\" />\n  <input type=\"number\" [(ngModel)]=\"searchMinimumPrice\" placeholder=\"Minimum Price\" />\n  <input type=\"number\" [(ngModel)]=\"searchMaximumPrice\" placeholder=\"Maximum Price\" />\n  <button (click)= update() >Apply Filters</button>\n  <br><br>\n  <mat-expansion-panel *ngFor=\"let post of posts | filter: searchCourse : 'course'\">\n    <mat-expansion-panel-header>\n      <mat-panel-title *ngIf=\"post.date > today \">\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: {{ post.date - today | date:'dd:hh:mm:ss'}}, Price: {{post.startingPrice}}$\n      </mat-panel-title>\n      <mat-panel-title *ngIf=\"post.date < today \">\n        Title: {{post.title}}, Author: {{post.author}}, Expiry in: EXPIRED, Price: {{post.startingPrice}}$\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-panel-description *ngIf=\"post.date > today\">\n    <p> Author: {{post.author}} </p>\n    <p> University: {{post.university}} </p>\n    <p> Course: {{post.course}} </p>\n    <p> Content: {{post.content}} </p>\n    <div class = \"post-image\">\n      <img [src]=\"post.imagePath\"  [alt]=\"post.title\">\n    </div>\n    <mat-action-row *ngIf=\"userIsAdmin\">\n      <a mat-button color = \"primary\" [routerLink]=\"['/edit', post.id]\"> EDIT </a>\n      <button mat-button color = \"warn\" (click) = \"onDelete(post.id)\"> DELETE </button>\n    </mat-action-row>\n    <mat-action-row *ngIf=\"userIsAuthenticated && !userIsAdmin\">\n      <a mat-button color = \"primary\" [routerLink]=\"['/bid', post.id]\" *ngIf=\"userId!= post.creator\"> BID </a>\n      <a mat-button color = \"primary\" [routerLink]=\"['/message', post.id]\" *ngIf=\"userId!= post.creator\"> MESSAGE SELLER </a>\n      <a mat-button color = \"primary\" [routerLink]=\"['/message', post.id]\" *ngIf=\"userId == post.creator\"> SEE MESSAGES ON YOUR POST </a>\n    </mat-action-row>\n  </mat-panel-description>\n  </mat-expansion-panel>\n</mat-accordion>\n<mat-paginator *ngIf = \"posts.length>0\" [length]=\"totalPosts\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"pageSizeOption\" (page)=\"onChangedPage($event)\" ></mat-paginator>\n<p class = \"info-text mat-body-1\" *ngIf=\"posts.length == 0 && !isLoading\">No books on sale yet/ No books with searched criterias!</p>\n<button class=\"host\"  *ngIf=\"posts.length == 0 && !isLoading\" (click)= update()>Reset Search</button>\n\n","import {Component, OnInit} from '@angular/core';\nimport { Post } from '../post.model';\nimport { PostsService } from '../post.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormGroup, FormControl, FormControlDirective, FormArray } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Message } from '../message.model';\n\n@Component({\n  templateUrl: './post-messages.component.html',\n  styleUrls: ['./post-messages.component.css']\n})\nexport class PostMessagesComponent implements OnInit {\n\n  constructor(public postsService: PostsService, public authService: AuthService, public route: ActivatedRoute) {}\n  private postId: string;\n  userId: string;\n  public post: Post;\n  public isLoading = false;\n  public addedMessage: Message;\n  public addedReply: Message;\n  form: FormGroup;\n  isChecked: boolean;\n\n  ngOnInit() {\n    this.isChecked = false;\n    this.userId = this.authService.getUserId();\n    this.form = new FormGroup({\n      message: new FormControl(null, {validators: [Validators.required]}),\n      replies: new FormArray([new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null),\n                              new FormControl(null)])\n    });\n    this.route.paramMap.subscribe( (paramMap: ParamMap) => {\n      if(paramMap.has('postId')) {\n        this.postId = paramMap.get('postId');\n        this.isLoading = true;\n        this.postsService.getPost(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.post = {\n            id: postData._id,\n            title: postData.title,\n            content: postData.content,\n            imagePath: postData.imagePath,\n            creator: postData.creator,\n            course: postData.course,\n            university: postData.university,\n            author: postData.author,\n            messages: postData.messages,\n            startingPrice: postData.startingPrice,\n            minimumAllowedPrice: postData.minimumAllowedPrice,\n            winner: postData.winner,\n            date: postData.date,\n            bought: postData.bought,\n            bidders: postData.bidders\n          };\n        });\n      }\n    });\n  }\n\n  OnChange($event){\n    this.isChecked = !this.isChecked\n}\n\n  onPostReply(index: number) {\n    this.addedReply = {\n      content: this.form.value.replies[index],\n      creator: this.userId,\n      public: true\n    }\n    this.post.messages[index].push(this.addedReply);\n    this.postsService.updatePostMessage(\n      this.post.id,\n      this.post.title,\n      this.post.content,\n      this.post.imagePath,\n      this.post.course,\n      this.post.university,\n      this.post.author,\n      this.post.messages,\n      this.post.startingPrice,\n      this.post.minimumAllowedPrice,\n      this.post.winner,\n      this.post.date,\n      this.post.bidders\n    );\n    this.form.reset();\n  }\n\n  onPostMessage() {\n    if(this.form.invalid) {\n      return;\n    }\n    this.addedMessage = {\n      content: this.form.value.message,\n      creator: this.userId,\n      public: !this.isChecked\n    }\n    this.post.messages.push([this.addedMessage]);\n    this.postsService.updatePostMessage(\n      this.post.id,\n      this.post.title,\n      this.post.content,\n      this.post.imagePath,\n      this.post.course,\n      this.post.university,\n      this.post.author,\n      this.post.messages,\n      this.post.startingPrice,\n      this.post.minimumAllowedPrice,\n      this.post.winner,\n      this.post.date,\n      this.post.bidders\n    );\n    this.form.reset();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <mat-card-content *ngIf=\"!isLoading\">\n    <h1 align=\"center\" *ngIf=\"post.creator == userId\">You are selling this product!</h1>\n    Title: {{post.title}} <br>\n    Author: {{post.author}} <br>\n    Course: {{post.course}} <br>\n    University: {{post.university}} <br>\n    Content: {{post.content}} <br>\n    <img height=\"100\" width=\"100\" src={{post.imagePath}}>\n  </mat-card-content>\n    <mat-accordion multi=\"true\" *ngIf=\"!isLoading\">\n      <br> <br>\n      <h1 align=\"center\"> Messages </h1>\n       <mat-card-content *ngFor=\"let messages of post.messages; index as i\">\n         <mat-expansion-panel *ngIf=\"messages[0].public || (post.creator == userId) || (messages[0].creator == userId)\">\n           <mat-expansion-panel-header *ngFor=\"let message of messages\">\n             <mat-label *ngIf=\"message.creator == post.creator && post.creator!== userId\">\n                Seller said:\n             </mat-label>\n             <mat-label *ngIf=\"message.creator == userId\">\n                You said:\n             </mat-label>\n             <p>\n               {{message.content}}\n             </p>\n           </mat-expansion-panel-header>\n          <div [formGroup] = \"form\">\n            <div formArrayName=\"replies\">\n              <input [formControlName]=\"i\" placeholder=\"Enter a reply\">\n              <button type=\"button\" (click)= \"onPostReply(i)\">Leave a reply!</button>\n            </div>\n          </div>\n         </mat-expansion-panel>\n       </mat-card-content>\n    <form [formGroup]=\"form\" (submit) = \"onPostMessage()\" *ngIf=\"userId!= post.creator\">\n      <mat-form-field>\n        <input\n        matInput type = \"text\"\n        formControlName = \"message\"\n        placeholder= \"Leave a Message\">\n      </mat-form-field>\n      <br>\n      <button\n        mat-raised-button\n        color = \"primary\"\n        type=\"submit\"> Post Message</button>\n        <br>\n        <mat-checkbox (change)=\"OnChange($event)\">Private Message!</mat-checkbox>\n    </form>\n\n    </mat-accordion>\n</mat-card>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { PostListComponent } from '../post-create/post-list/post-list.component';\nimport { PostListSellingComponent } from '../post-create/post-list-selling/post-list-selling.component';\nimport { PostListBuyingComponent } from '../post-create/post-list-buying/post-list-buying.component';\nimport { PostListExpiredComponent } from '../post-create/post-list-expired/post-list-expired.component';\nimport { PostCreateComponent } from '../post-create/post-create/post-create.component';\nimport { PostBuyComponent} from '../post-create/post-buy/post-buy.component';\nimport { PostListWonComponent } from './post-list-won/post-list-won.component';\nimport { PostListBoughtComponent } from './post-list-bought/post-list-bought.component';\nimport { PostListSoldComponent } from './post-list-sold/post-list-sold.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { JsonFilterByPipe } from '../../helpers/json-filter-by.pipe'\nimport { FilterPipe } from '../../helpers/filter.pipe';\nimport { FilterPipeNumberLow } from '../../helpers/filter.pipe';\nimport { FilterPipeNumberHigh } from '../../helpers/filter.pipe';\nimport { PostMessagesComponent } from './post-messages/post-messages.component';\nimport { PostBidComponent } from './post-bid/post-bid.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n\n\n@NgModule({\n  declarations: [\n    PostListComponent,\n    PostCreateComponent,\n    PostListSellingComponent,\n    PostListBuyingComponent,\n    PostListExpiredComponent,\n    PostListWonComponent,\n    PostMessagesComponent,\n    PostBuyComponent,\n    PostBidComponent,\n    PostListBoughtComponent,\n    PostListSoldComponent,\n    JsonFilterByPipe,\n    FilterPipe,\n    FilterPipeNumberLow,\n    FilterPipeNumberHigh\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    RouterModule,\n    FormsModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ]\n})\nexport class PostsModule {}\n","import { Post } from './post.model';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { environment } from \"../../../environments/environment\";\nimport { Message } from './message.model';\n\n\nconst BACKEND_URL = environment.apiUrl + \"/posts\";\n\n@Injectable({providedIn: 'root'})\nexport class PostsService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject<{posts: Post[], postCount: number}>();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getPosts(postsPerPage: number, currentPage: number, userId: string, author: string, title: string, university: string, course: string, minPrice: number, maxPrice: number) {\n    const queryParams = `?pageSize=${postsPerPage}&page=${currentPage}&creatorId=${userId}&author=${author}&title=${title}&university=${university}&course=${course}&date=${true}&minPrice=${minPrice}&maxPrice=${maxPrice}`;\n    this.http\n    .get<{message: string, posts: any, maxPosts: number}>(\n      BACKEND_URL+queryParams\n      )\n      .pipe(map(postData => {\n        return {\n          posts: postData.posts.map(post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator,\n            course: post.course,\n            university: post.university,\n            author: post.author,\n            startingPrice: post.startingPrice,\n            minimumAllowedPrice: post.minimumAllowedPrice,\n            date: new Date(post.date),\n            bought: post.bought\n          };\n        }), maxPosts: postData.maxPosts};\n      }))\n      .subscribe( transformedPosts => {\n        this.posts = transformedPosts.posts;\n        this.postsUpdated.next({posts: [...this.posts], postCount: transformedPosts.maxPosts});\n      });\n  }\n\n  getPostsSelling(postsPerPage: number, currentPage: number, userId: string) {\n    const queryParams = `?pageSize=${postsPerPage}&page=${currentPage}&owner=${userId}`;\n    this.http\n    .get<{message: string, posts: any, maxPosts: number}>(\n      BACKEND_URL+queryParams\n      )\n      .pipe(map(postData => {\n        return {\n          posts: postData.posts.map( post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator,\n            course: post.course,\n            university: post.university,\n            author: post.author,\n            startingPrice: post.startingPrice,\n            minimumAllowedPrice: post.minimumAllowedPrice,\n            date: new Date(post.date),\n            bought: post.bought\n          };\n        }), maxPosts: postData.maxPosts};\n      }))\n      .subscribe( transformedPosts => {\n        this.posts = transformedPosts.posts;\n        this.postsUpdated.next({posts: [...this.posts], postCount: transformedPosts.maxPosts});\n      });\n  }\n\n  getPostsBiding(postsPerPage: number, currentPage: number, userId: string) {\n    const queryParams = `?pageSize=${postsPerPage}&page=${currentPage}&bidder=${userId}&date=${true}`;\n    this.http\n    .get<{message: string, posts: any, maxPosts: number}>(\n      BACKEND_URL+queryParams\n      )\n      .pipe(map(postData => {\n        return {\n          posts: postData.posts.map( post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator,\n            course: post.course,\n            university: post.university,\n            author: post.author,\n            startingPrice: post.startingPrice,\n            minimumAllowedPrice: post.minimumAllowedPrice,\n            winner: post.winner,\n            date: new Date(post.date),\n            bought: post.bought\n          };\n        }), maxPosts: postData.maxPosts};\n      }))\n      .subscribe( transformedPosts => {\n        this.posts = transformedPosts.posts;\n        this.postsUpdated.next({posts: [...this.posts], postCount: transformedPosts.maxPosts});\n      });\n  }\n\n  getPostsWon(postsPerPage: number, currentPage: number, userId: string) {\n    const queryParams = `?pageSize=${postsPerPage}&page=${currentPage}&winner=${userId}&date=${false}`;\n    this.http\n    .get<{message: string, posts: any, maxPosts: number}>(\n      BACKEND_URL+queryParams\n      )\n      .pipe(map(postData => {\n        return {\n          posts: postData.posts.map( post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator,\n            course: post.course,\n            university: post.university,\n            author: post.author,\n            startingPrice: post.startingPrice,\n            minimumAllowedPrice: post.minimumAllowedPrice,\n            winner: post.winner,\n            date: new Date(post.date),\n            bought: post.bought\n          };\n        }), maxPosts: postData.maxPosts};\n      }))\n      .subscribe( transformedPosts => {\n        this.posts = transformedPosts.posts;\n        this.posts = this.posts.filter((post: Post) => post.startingPrice>=post.minimumAllowedPrice && post.bought == false)\n        this.postsUpdated.next({posts: [...this.posts], postCount: this.posts.length});\n      });\n  }\n\n  getPostsBought(postsPerPage: number, currentPage: number, userId: string) {\n    const queryParams = `?pageSize=${postsPerPage}&page=${currentPage}&boughter=${userId}&date=${false}&bought=${true}`;\n    this.http\n    .get<{message: string, posts: any, maxPosts: number}>(\n      BACKEND_URL+queryParams\n      )\n      .pipe(map(postData => {\n        return {\n          posts: postData.posts.map( post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator,\n            course: post.course,\n            university: post.university,\n            author: post.author,\n            startingPrice: post.startingPrice,\n            minimumAllowedPrice: post.minimumAllowedPrice,\n            winner: post.winner,\n            date: new Date(post.date),\n            bought: post.bought\n          };\n        }), maxPosts: postData.maxPosts};\n      }))\n      .subscribe( transformedPosts => {\n        this.posts = transformedPosts.posts;\n        this.postsUpdated.next({posts: [...this.posts], postCount: transformedPosts.maxPosts});\n      });\n  }\n\n  getPostsExpired(postsPerPage: number, currentPage: number) {\n    const queryParams = `?pageSize=${postsPerPage}&page=${currentPage}`;\n    this.http\n    .get<{message: string, posts: any, maxPosts: number}>(\n      BACKEND_URL+queryParams\n      )\n      .pipe(map(postData => {\n        return {\n          posts: postData.posts.map( post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator,\n            course: post.course,\n            university: post.university,\n            author: post.author,\n            startingPrice: post.startingPrice,\n            minimumAllowedPrice: post.minimumAllowedPrice,\n            winner: post.winner,\n            date: new Date(post.date),\n            bought: post.bought\n          };\n        }), maxPosts: postData.maxPosts};\n      }))\n      .subscribe( transformedPosts => {\n        this.posts = transformedPosts.posts;\n        this.posts = this.posts.filter((post: Post) => new Date(post.date) < new Date(Date.now()) && post.minimumAllowedPrice > post.startingPrice)\n        this.postsUpdated.next({posts: [...this.posts], postCount: this.posts.length});\n      });\n  }\n\n\n  getPostsSold(postsPerPage: number, currentPage: number) {\n    const queryParams = `?pageSize=${postsPerPage}&page=${currentPage}&sold=${true}`;\n    this.http\n    .get<{message: string, posts: any, maxPosts: number}>(\n      BACKEND_URL+queryParams\n      )\n      .pipe(map(postData => {\n        return {\n          posts: postData.posts.map( post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator,\n            course: post.course,\n            university: post.university,\n            author: post.author,\n            startingPrice: post.startingPrice,\n            minimumAllowedPrice: post.minimumAllowedPrice,\n            winner: post.winner,\n            date: new Date(post.date),\n            bought: post.bought\n          };\n        }), maxPosts: postData.maxPosts};\n      }))\n      .subscribe( transformedPosts => {\n        this.posts = transformedPosts.posts;\n        this.postsUpdated.next({posts: [...this.posts], postCount: transformedPosts.maxPosts});\n      });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  getPost(id: string) {\n    return this.http.get<{_id: string, title: string, content: string, imagePath: string, creator: string, course: string, university: string, author: string, messages: Array<Array<Message>>, startingPrice: number, minimumAllowedPrice: number, winner: string, date: Date, bought: boolean, bidders: Array<string> }>(BACKEND_URL+ \"/\" + id);\n  }\n\n  addPost(title: string, content: string, image: File, course: string, university: string, author: string, startingPrice: number, minimumAllowedPrice: number, date: Date) {\n    const postData = new FormData();\n    postData.append(\"title\", title);\n    postData.append(\"content\", content);\n    postData.append(\"image\", image, title);\n    postData.append(\"course\", course);\n    postData.append(\"university\", university);\n    postData.append(\"author\", author);\n    postData.append(\"startingPrice\", JSON.stringify(startingPrice));\n    postData.append(\"minimumAllowedPrice\", JSON.stringify(minimumAllowedPrice));\n    postData.append(\"winner\", null);\n    postData.append(\"date\", new Date(date).toISOString());\n    postData.append(\"bought\", JSON.stringify(false));\n    this.http\n    .post<{message: string, post: Post}>(BACKEND_URL,\n    postData)\n    .subscribe( (responseData) => {\n      this.router.navigate([\"/postList\"], {skipLocationChange: true});\n    });\n  }\n\n  updatePost(id: string, titleUpdated: string, contentUpdated: string, imageUpdated: File | string, courseUpdated: string, universityUpdated: string, authorUpdated: string, messages: Array<Array<Message>>, startingPrice: number, minimumAllowedPrice: number, winner: string, date: Date, bidders: Array<string>) {\n    let postData: Post | FormData;\n    if (typeof(imageUpdated) === 'object') {\n      postData = new FormData();\n      postData.append(\"id\", id);\n      postData.append(\"title\", titleUpdated);\n      postData.append(\"content\", contentUpdated);\n      postData.append(\"image\", imageUpdated, titleUpdated);\n      postData.append(\"course\", courseUpdated);\n      postData.append(\"university\", universityUpdated);\n      postData.append(\"author\", authorUpdated);\n      postData.append(\"messages\", JSON.stringify(messages));\n      postData.append(\"startingPrice\", JSON.stringify(startingPrice));\n      postData.append(\"minimumAllowedPrice\", JSON.stringify(minimumAllowedPrice));\n      postData.append(\"winner\", winner);\n      postData.append(\"date\", JSON.stringify(date));\n      postData.append(\"bought\", JSON.stringify(false));\n    } else {\n        postData =  {\n        id: id,\n        title: titleUpdated,\n        content: contentUpdated,\n        imagePath: imageUpdated,\n        creator: null,\n        course: courseUpdated,\n        university: universityUpdated,\n        author: authorUpdated,\n        messages: messages,\n        startingPrice: startingPrice,\n        minimumAllowedPrice: minimumAllowedPrice,\n        winner: winner,\n        date: date,\n        bought: false,\n        bidders: bidders\n      }\n    }\n    this.http.put(BACKEND_URL + \"/\" + id, postData)\n    .subscribe(response => {\n      this.router.navigate([\"/postList\"], {skipLocationChange: true});\n    })\n  }\n\n  updatePostMessage(id: string, titleUpdated: string, contentUpdated: string, imageUpdated: string, courseUpdated: string, universityUpdated: string, authorUpdated: string, messages: Array<Array<Message>>, startingPrice: number, minimumAllowedPrice: number, winner: string, date: Date, bidders: Array<string>) {\n    let postData: Post = {\n        id: id,\n        title: titleUpdated,\n        content: contentUpdated,\n        imagePath: imageUpdated,\n        creator: null,\n        course: courseUpdated,\n        university: universityUpdated,\n        author: authorUpdated,\n        messages: messages,\n        startingPrice: startingPrice,\n        minimumAllowedPrice: minimumAllowedPrice,\n        winner: winner,\n        date: date,\n        bought: false,\n        bidders: bidders\n      }\n    this.http.put(BACKEND_URL + \"/\" + id, postData)\n    .subscribe(response => {\n    })\n  }\n\n  updateBid(id: string, titleUpdated: string, contentUpdated: string, imageUpdated: string, courseUpdated: string, universityUpdated: string, authorUpdated: string, messages: Array<Array<Message>>, startingPrice: number, minimumAllowedPrice: number, winner: string, date: Date, bidders: Array<string>) {\n    let postData: Post = {\n        id: id,\n        title: titleUpdated,\n        content: contentUpdated,\n        imagePath: imageUpdated,\n        creator: null,\n        course: courseUpdated,\n        university: universityUpdated,\n        author: authorUpdated,\n        messages: messages,\n        startingPrice: startingPrice,\n        minimumAllowedPrice: minimumAllowedPrice,\n        winner: winner,\n        date: date,\n        bought: false,\n        bidders: bidders\n      }\n    this.http.put(BACKEND_URL + \"/\" + id, postData)\n    .subscribe(response => {\n    })\n  }\n\n\n  buyProduct(id: string, titleUpdated: string, contentUpdated: string, imageUpdated: string, courseUpdated: string, universityUpdated: string, authorUpdated: string, messages: Array<Array<Message>>, startingPrice: number, minimumAllowedPrice: number, winner: string, date: Date, bidders: Array<string>) {\n    let postData: Post = {\n      id: id,\n      title: titleUpdated,\n      content: contentUpdated,\n      imagePath: imageUpdated,\n      creator: null,\n      course: courseUpdated,\n      university: universityUpdated,\n      author: authorUpdated,\n      messages: messages,\n      startingPrice: startingPrice,\n      minimumAllowedPrice: minimumAllowedPrice,\n      winner: winner,\n      date: date,\n      bought: true,\n      bidders: bidders\n    }\n  this.http.put(BACKEND_URL + \"/\" + id, postData)\n  .subscribe(response => {\n  })\n  }\n\n\n  deletePost(postId: string) {\n    return this.http.delete(BACKEND_URL + \"/\" + postId)\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://nodejsangular-env.eba-upqyghfv.us-east-1.elasticbeanstalk.com/api\",\n  api: \"http://localhost:3000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}